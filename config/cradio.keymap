/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 2 Q  &kp W  &kp E  &kp R                  &kp T                   &kp Y                        &kp U        &kp I      &kp O       &kp P
&kp A    &kp S  &kp D  &kp F                  &kp G                   &kp H                        &kp J        &kp K      &kp L       &kp SEMICOLON
&kp Z    &kp X  &kp C  &kp V                  &kp B                   &kp N                        &kp M        &kp COMMA  &kp PERIOD  &kp SLASH
                       &mt LEFT_SHIFT ESCAPE  &mt LEFT_COMMAND ENTER  &mt LA(BACKSPACE) BACKSPACE  &lt 1 SPACE
            >;
        };

        symbols+num {
            bindings = <
&kp ESCAPE  &kp GRAVE       &kp UP_ARROW  &kp LEFT_GUI     &to 2   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PAGE_UP    &kp SINGLE_QUOTE  &kp NON_US_BACKSLASH
&kp TAB     &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &to 3   &kp CAPS          &kp HOME           &kp PAGE_DOWN  &kp END           &kp RIGHT_ALT
&kp K_UNDO  &kp K_CUT       &kp K_COPY    &kp K_PASTE      &to 0   &none             &kp BACKSPACE      &kp DELETE     &kp INSERT        &kp LEFT_CONTROL
                                          &trans           &trans  &trans            &trans
            >;
        };

        nav+shortcut {
            bindings = <
&none         &kp LG(LS(S))  &kp LG(LA(I))  &kp F4        &kp F5  &kp F6          &kp F7        &kp F8           &kp F9         &kp F10
&kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3   &kp NUMBER_4  &kp N5  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN         &kp RIGHT      &kp N0
&to 2         &kp F12        &kp LBKT       &kp RBKT      &to 0   &kp KP_PLUS     &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &to 0
                                            &trans        &trans  &trans          &mo 1
            >;
        };

        tri_layer {
            bindings = <
&bt BT_CLR     &bt BT_PRV     &bt BT_NXT     &bt BT_CLR_ALL  &to 0          &to 0   &none  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4   &none   &none  &none       &none              &none
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  &none   &none  &none       &none              &none
                                             &trans          &trans         &trans  &mo 1
            >;
        };
    };
};
